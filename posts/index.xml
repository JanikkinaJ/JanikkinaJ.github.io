<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Js Blog</title>
    <link>https://janikkinaj.github.io/posts/</link>
    <description>Recent content in Posts on Js Blog</description>
    <generator>Hugo -- 0.126.1</generator>
    <language>en-us</language>
    <atom:link href="https://janikkinaj.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Turing machines</title>
      <link>https://janikkinaj.github.io/posts/turing-machines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://janikkinaj.github.io/posts/turing-machines/</guid>
      <description>Description a hypothetical machine not a real one This model describes how a Computer would solve a formalized problem to get to the result and which requirements the algorithm has that ensure the computer understands the job and correctly executes it. It can simulate any computer algorithm. Tape Infinitely long tape (acts like a memory in a normal computer) Squares on the tape are usually blank at the start The squares can have symbols written on them, in this case blank, zero and one (which is why it is a 3-symbol turing machine) TODO Describe Multi tape turing machines here Head Has a head which is positioned over one of the squares on the tape The head can perform 3 functions: Read the symbol in the current square under the head Edit the symbol (by writing a new one or erasing it) Move the tape left or right by one square so that the machine can read and edit the symbol on a neighbouring square Machine state The machine can have a set of states, the state changes what the machine does with the presented information.</description>
    </item>
  </channel>
</rss>
